name: Build
description: Build Windows artifacts

inputs:
  pythonVersion:
    type: string
    default: 3.9
  gsltag:
    default: gsl-2.7.1

runs:
  using: "composite"
  steps:

  - name: Setup Python
    uses: actions/setup-python@v4
    with:
      python-version: ${{ env.pythonVersion }}

  - name: Install Python Dependencies
    shell: bash
    run: pip3 install --user conan==1.*

  - name: Install MinGW
    shell: bash
    run: choco install -y mingw --version=11.2.0 --allow-downgrade

  - name: Setup Conan Profile
    shell: bash
    run: |
      export PATH="$(python3 -m site --user-base)/bin:$PATH"
      conan profile new default --detect
      conan profile update settings.compiler="MinGW" default
      conan profile update settings.compiler.version=11 default

  - name: Collect zstd
    shell: bash
    run: |
      curl -L https://github.com/facebook/zstd/releases/download/v1.5.2/zstd-v1.5.2-win64.zip > zstd.zip
      unzip zstd.zip

  - name: Collect GSL
    shell: bash
    run: |
      curl -L https://mirror.msys2.org/mingw/mingw64/mingw-w64-x86_64-${{ inputs.gsltag }}-1-any.pkg.tar.zst > ${{ inputs.gsltag }}.pkg.tar.zst
      ./zstd-v1.5.2-win64/zstd.exe -d ${{ inputs.gsltag }}.pkg.tar.zst
      mkdir ${{ inputs.gsltag }}
      tar xvf ${{ inputs.gsltag }}.pkg.tar --directory ${{ inputs.gsltag }}

  - name: Download HDF5 Artifacts
    shell: powershell
    run: |
      $ErrorActionPreference = 'Stop'
      $HDF5_ARTIFACTS = "https://github.com/disorderedmaterials/HDF5/releases/download/" + "${{ env.hdf5tag }}/${{ env.hdf5tag }}-windows.zip"
      wget $HDF5_ARTIFACTS -O hdf5.zip
      7z x hdf5.zip

  - name: Build
    shell: bash
    run: |
      set -ex
      HDF5_DIR="$(pwd)/${{ env.hdf5tag }}"
      GSL_DIR="$(pwd)/${{ inputs.gsltag }}/mingw64"
      mkdir build && cd build
      conan install ../
      cmake ../ -G "MinGW Makefiles" -DLOCAL_STATIC_HDF5:bool=true -DHDF5_DIR:path=${HDF5_DIR} -DLOCAL_STATIC_GSL:bool=true -DGSL_DIR:path=${GSL_DIR}
      cmake --build . --config Release
      cd ../

      mkdir deploy && cd deploy
      conan install ../ -g deploy

  - name: Create Zip
    shell: bash
    run: |
      set -ex
      mkdir packages
      mkdir binaries-${{ env.modExVersion }}-windows
      cp build/np binaries-${{ env.modExVersion }}-windows/
      7z a packages/binaries-${{ env.modExVersion }}-windows.zip binaries-${{ env.modExVersion }}-windows/

  - name: Upload Raw Build Artifacts
    uses: actions/upload-artifact@v3
    with:
      name: packages
      path: ${{ github.workspace }}/packages
